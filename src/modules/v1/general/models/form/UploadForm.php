<?php

namespace app\modules\v1\general\models\form;

use Yii;
use yii\base\Model;
use yii\helpers\FileHelper;

class UploadForm extends Model
{
    public $file;
    public $assetUrl;
    public $objectKey;

    public function rules()
    {
        return array_merge(parent::rules(), [
            ["file", "required"],
        ]); // TODO: Change the autogenerated stub
    }

    public function uploadFileToS3($objectKey): bool
    {
        try {
            $path = Yii::$app->fileStorage->saveUpload($this->file, $objectKey, false, false, [
                "ContentType" => "public-read"
            ], env("PREFIX_GAP_FEEDBACK"));

            $this->assetUrl = rtrim(Yii::$app->fileStorage->baseUrl, '/') . '/' . str_replace('\\', '/', ltrim($path, '/\\'));
            return true;
        } catch (\Exception $exception) {
            throw $exception;
            return false;
        }
    }

    public function deleteFileFromS3($objectKey)
    {
        $pathPrefix = env('PREFIX_GAP_FEEDBACK');
        $fullPath = FileHelper::normalizePath($pathPrefix . '/' . $objectKey);

        try {
            Yii::$app->fileStorage->filesystem->delete($fullPath);
        } catch (\Exception $e) {
            Yii::error("Delete failed: " . $e->getMessage(), __METHOD__);
        }
    }
}
